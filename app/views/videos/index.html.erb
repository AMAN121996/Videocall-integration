<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Call</title>
</head>
<body>

<div id="container">
  <form id="login">
    <input type="text" id="username" placeholder="Enter your name" required>
    <button type="submit" id="joinOrLeaveRoom">Join Video Call</button>
  </form>
  <div id="participantsContainer">
    <div id="localParticipant">
      <div id="localVideoTrack" class="participant"></div>
    </div>
    <div id="remoteParticipants">
      <!-- Remote participants will be added here as they join the call -->
    </div>
  </div>
</div>

<script src="https://sdk.twilio.com/js/video/releases/2.14.0/twilio-video.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('login');
    const joinOrLeaveButton = document.getElementById('joinOrLeaveRoom');

    form.addEventListener('submit', function (event) {
      event.preventDefault();
      joinVideoCall();
    });

    function joinVideoCall() {
      const username = document.getElementById('username').value;

      // Fetch a token from the server
      fetch('/token', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: username,
        }),
      })
      .then(response => response.json())
      .then(data => {
        // Use the token to connect to the video call using Twilio Video SDK
        connectToVideoCall(data.token);
      })
      .catch(error => {
        console.error('Error fetching token:', error);
      });
    }

    function connectToVideoCall(token) {
      // Twilio Video SDK logic to join the call goes here
      // Example: Connect to a room using Twilio Video SDK
      Twilio.Video.connect(token, {
        name: 'your-room-name',
        video: { width: 640 }
      }).then(room => {
        console.log(`Successfully joined room ${room.name}`);
        // Handle local and remote participants
        handleParticipants(room);
      }).catch(error => {
        console.error(`Unable to connect to the room: ${error.message}`);
      });
    }

    function handleParticipants(room) {
      // Logic to handle local and remote participants
      // This might involve updating the UI to show video tracks, etc.
    }
  });
</script>

</body>
</html>
